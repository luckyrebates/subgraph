#用户详情
type UserInfo @entity{
  id: Bytes!  #用户地址
  ticketsPurchaseList: [TicketsPurchase!]  @derivedFrom(field: "userInfo")  #购注记录
  ticketsGetList:[TicketsGet!]  @derivedFrom(field: "userInfo")  #领取记录
  prizeDrawnList: [PrizeDrawn!]  @derivedFrom(field: "userInfo")  #中奖记录
  claimPrizeList: [ClaimPrize!]  @derivedFrom(field: "userInfo")  #领取记录
}


#红包详情
type  TokenGift @entity{
  id: String!
  ticketToken: Bytes!
  ticketPirce: BigInt! # uint256 

  status:   Int8! #1:open 2:Close 3:Claimable
  model:   Int8! #1:buyTicket model 2:sendTicket model


  allowAddr: Bytes!
  secret:BigInt 
  nonce:BigInt  # secret证明
  vrfRandom:BigInt  # vrf生成随机数
  randomResult:BigInt # 最终用于红包生成的随机数
  
  buyTickets: BigInt! # uint256  当前购注总数
  sendTickets: BigInt! # uint256  当前领取总数
  injectTickets: BigInt! # uint256  当前注入总数

  autoClaim: Boolean! # bool  是否自动领取
  maxTickets: BigInt! # uint256   最大奖注数限制
  maxPrizeNum:BigInt! # uint256   最大中奖数，为0表明100%中奖
  endTime:BigInt!  # 设定的结束时间（理论）

  startTimestamp:BigInt!  #实际红包开始时间
  endTimestamp:BigInt #实际红包停止投注时间

  createdEvent: TokenGiftCreated  @derivedFrom(field: "tokenGift")  #创建事件记录
  closedEvent: TokenGiftClosed    @derivedFrom(field: "tokenGift")  #停止事件记录
  claimableEvent: TokenGiftClaimable   @derivedFrom(field: "tokenGift") #开奖事件记录
 

  ticketsInjectList: [TicketsInject!]      @derivedFrom(field: "tokenGift")  #注入记录list
  ticketsPurchaseList:[TicketsPurchase!]   @derivedFrom(field: "tokenGift")  #购注记录list
  ticketsGetList:[TicketsGet!]   @derivedFrom(field: "tokenGift")  #领取记录list
  prizeDrawnList: [PrizeDrawn!]    @derivedFrom(field: "tokenGift")  #中奖记录list
  claimPrizeList: [ClaimPrize!]    @derivedFrom(field: "tokenGift")  #领奖记录list

}

type ClaimPrize @entity(immutable: true) {
  id: Bytes!
  winner: Bytes! # address
  totalAmount: BigInt! # uint256
  autoClaim: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
  userInfo:UserInfo!
  prizeDrawnList:[PrizeDrawn!]!  @derivedFrom(field: "claimPrize")
}

type DefaultAutoClaimChange @entity(immutable: true) {
  id: Bytes!
  defaultAutoClaim: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DefaultTokenChange @entity(immutable: true) {
  id: Bytes!
  defaultTicketToken: Bytes! # address
  defaultTicketPirce: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OperatorAddress @entity(immutable: true) {
  id: Bytes!
  operatorAddress: Bytes! # address
  opt: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PrizeDrawn @entity(immutable: true) {
  id: Bytes!
  winner: Bytes! # address
  index: BigInt! # uint256 中奖标号
  amount: BigInt! # uint256
  autoClaim: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
  userInfo:UserInfo!
  claimPrize:ClaimPrize
  
}

type TokenGiftClaimable @entity(immutable: true) {
  id: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
}

type TokenGiftClosed @entity(immutable: true) {
  id: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
}

type TokenGiftCreated @entity(immutable: true) {
  id: String! 
  model:Int8! #0:buyTicket model 1:sendTicket model 
  startTime: BigInt! # uint256
  endTime: BigInt! # uint256
  maxTickets: BigInt! # uint256
  maxPrizeNum: BigInt! # uint256
  autoClaim:Boolean!
  ticketPirce: BigInt! # uint256 
  sendAllowAddr:Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
}


type TicketsGet @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiveAddress: Bytes! # address
  ticketNumbers: BigInt! # uint256
  fromIndex:BigInt! #奖注起始标号
  toIndex:BigInt! #奖注结束标号
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
  userInfo:UserInfo!
}

type TicketsInject @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  ticketNumbers: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
  
}

type TicketsPurchase @entity(immutable: true) {
  id: Bytes!
  sender: Bytes! # address
  receiveAddress: Bytes! # address
  ticketNumbers: BigInt! # uint256
  fromIndex:BigInt! #奖注起始标号
  toIndex:BigInt! #奖注结束标号
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  tokenGift:TokenGift!
  userInfo:UserInfo!
}